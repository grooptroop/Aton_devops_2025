name: Docker CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker Info
        run: docker --version && docker info

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker buildx build --cache-from=type=local,src=/tmp/.buildx-cache \
                              --cache-to=type=local,dest=/tmp/.buildx-cache \
                              --platform linux/amd64 \
                              -t ${{ secrets.DOCKERHUB_USERNAME }}/my-app:latest . \
                              --push  # Сборка и публикация Docker-образа

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Pull and run Docker container
        run: |
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/my-app:latest
          docker run -d --name my-nginx -p 80:80 -p 443:443 --rm ${{ secrets.DOCKERHUB_USERNAME }}/my-app:latest

      - name: Wait for container to be ready
        run: |
          for i in {1..10}; do
            if curl -vk https://localhost:443; then
              echo "Приложение отвечает по HTTPS.";
              exit 0;
            fi
            echo "Приложение не доступно."
            sleep 5;
          done
